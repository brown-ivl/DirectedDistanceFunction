[ INFO ]: Seeding RNGs with 42
[ INFO ]: Loading DepthODFDatasetLoader dataset. Positional Encoding: False, Coordinate Type: direction, Autodecoder: False
wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
DATA SIZE: 1000
[ INFO ]: Loading DepthODFDatasetLoader dataset. Positional Encoding: False, Coordinate Type: direction, Autodecoder: False
[ INFO ]: Training data has 1000 shapes and 1000 rays per sample.
[ INFO ]: Validation data has 200 shapes and 10 rays per sample.
  0%|                                                                                                                                                       | 0/63 [00:00<?, ?it/s]
----------------------------- EPOCH: 1/3 -----------------------------
  0%|                                                                                                                                                       | 0/63 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 216, in <module>
    train(Args.output_dir, Args.expt_name, NeuralODF, Mask3D, optimizer, TrainDataLoader, ValDataLoader, loss_history, hyperparameters, Device, scheduler)
  File "train.py", line 62, in train
    odf_output = odf_model(odf_coords)
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\nn\modules\module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "models\odf_models.py", line 71, in forward
    x = self.relu(x)
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\nn\modules\module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\nn\modules\activation.py", line 102, in forward
    return F.relu(input, inplace=self.inplace)
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\nn\functional.py", line 1136, in relu
    result = torch.relu(input)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 24.00 GiB total capacity; 325.02 MiB already allocated; 21.94 GiB free; 326.00 MiB reserved in total by PyTorch)