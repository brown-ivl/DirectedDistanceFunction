
wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
[ INFO ]: Seeding RNGs with 42
[ INFO ]: Loading DepthODFDatasetLoader dataset. Positional Encoding: False, Coordinate Type: direction, Autodecoder: False
DATA SIZE: 1000
[ INFO ]: Loading DepthODFDatasetLoader dataset. Positional Encoding: False, Coordinate Type: direction, Autodecoder: False
[ INFO ]: Training data has 1000 shapes and 1000 rays per sample.
[ INFO ]: Validation data has 200 shapes and 10 rays per sample.
----------------------------- EPOCH: 1/3 -----------------------------
Training...
  0%|                                                                                                                                                       | 0/63 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 216, in <module>
    train(Args.output_dir, Args.expt_name, NeuralODF, Mask3D, optimizer, TrainDataLoader, ValDataLoader, loss_history, hyperparameters, Device, scheduler)
  File "train.py", line 52, in train
    for batch in tqdm(train_loader):
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\tqdm\std.py", line 1176, in __iter__
    for obj in iterable:
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\utils\data\dataloader.py", line 435, in __next__
    data = self._next_data()
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\utils\data\dataloader.py", line 475, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\utils\data\_utils\fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "C:\Users\Trevor\miniconda3\envs\ivlresearch\lib\site-packages\torch\utils\data\_utils\fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "loaders\depth_odf_dataset_5d.py", line 109, in __getitem__
    self.Sampler = PositiveSampler(DepthData, TargetRays=self.nTargetSamples, UsePosEnc=self.PositionalEnc)
  File "loaders\depth_sampler_5d.py", line 147, in __init__
    self.sample(self.nTargetRays)
  File "loaders\depth_sampler_5d.py", line 204, in sample
    self.MaskLabels = torch.vstack([torch.ones((self.SurfacePionts.shape[0], 1)), torch.zeros((self.Coordinates.shape[0], 1))])
AttributeError: 'PositiveSampler' object has no attribute 'SurfacePionts'