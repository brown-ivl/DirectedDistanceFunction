[ INFO ]: Seeding RNGs with 42
[ INFO ]: Loading DepthODFDatasetLoader dataset. Positional Encoding: False, Coordinate Type: direction, Autodecoder: False
wandb: WARNING Calling wandb.run.save without any arguments is deprecated.Changes to attributes are automatically persisted.
DATA SIZE: 1000
[ INFO ]: Loading DepthODFDatasetLoader dataset. Positional Encoding: False, Coordinate Type: direction, Autodecoder: False
[ INFO ]: Training data has 1000 shapes and 1000 rays per sample.
[ INFO ]: Validation data has 200 shapes and 10 rays per sample.
----------------------------- EPOCH: 1/3 -----------------------------
Training...
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
3 Values
([tensor([[ 0.7450,  0.1594, -0.1300, -0.4528, -0.8414,  0.2950],
        [ 0.5165, -0.0108, -0.1792, -0.6501, -0.7564,  0.0720],
        [ 0.7391,  0.1575, -0.1418, -0.4705, -0.8447,  0.2552],
        ...,
        [ 0.2786,  0.1059, -0.3097, -0.8823, -0.4519, -0.1314],
        [ 0.4821, -0.1344, -0.3297, -0.5815, -0.7978, -0.1595],
        [ 0.4598, -0.0179, -0.1580, -0.6949, -0.7119,  0.1014]]), tensor([[ 0.2476, -0.5606,  0.4094,  0.3349, -0.0557, -0.9406],
        [ 0.1956, -0.4607,  0.5200,  0.2690,  0.3349, -0.9030],
        [ 0.0738, -0.2162,  0.3815, -0.1177,  0.6701, -0.7329],
        ...,
        [ 0.1240, -0.1281,  0.1830, -0.0100,  0.5978, -0.8016],
        [ 0.3039, -0.5762,  0.1128,  0.2666, -0.0540, -0.9623],
        [ 0.1010, -0.3655,  0.2198, -0.0546,  0.3212, -0.9454]]), tensor([[ 0.8909, -0.1890,  0.2189, -0.4971, -0.2704, -0.8245],
        [ 0.7277, -0.3830,  0.0235, -0.5142, -0.4628, -0.7221],
        [ 0.9283, -0.1742,  0.2630, -0.4578, -0.2755, -0.8453],
        ...,
        [ 0.6000, -0.5302, -0.3171, -0.4412, -0.4305, -0.7874],
        [ 0.5258, -0.4676, -0.2641, -0.5352, -0.3772, -0.7559],
        [ 0.5738, -0.5347, -0.3764, -0.4407, -0.4094, -0.7989]]), tensor([], size=(0, 6)), tensor([], size=(0, 6)), tensor([], size=(0, 6)), tensor([[ 0.3540, -0.0412, -0.5372, -0.7943, -0.4072,  0.4509],
        [ 0.5347,  0.0935, -0.5370, -0.5688, -0.0888,  0.8177],
        [ 0.1586,  0.2507, -0.2444, -0.7153,  0.2008,  0.6693],
        ...,
        [ 0.2499, -0.0046, -0.3713, -0.7501, -0.2171,  0.6246],
        [ 0.2427, -0.2422, -0.4598, -0.6886, -0.5948,  0.4148],
        [ 0.2269, -0.3232, -0.5094, -0.6653, -0.6799,  0.3084]]), tensor([[ 0.3946, -0.1121, -0.1284, -0.5434,  0.8218,  0.1716],
        [ 0.2978, -0.1960, -0.3393, -0.0038,  0.6924,  0.7215],
        [ 0.1877, -0.0494, -0.3695,  0.3563,  0.2805,  0.8913],
        ...,
        [ 0.6054, -0.5474, -0.3400, -0.4391,  0.8296,  0.3449],
        [ 0.5755, -0.6095, -0.4584, -0.3529,  0.8167,  0.4567],
        [ 0.0971, -0.2376, -0.5263,  0.3649,  0.5009,  0.7848]]), tensor([[-0.5948,  0.3055, -0.4889,  0.1031,  0.8807,  0.4623],
        [-0.6259,  0.0287, -0.6219,  0.1110,  0.8134,  0.5711],
        [-0.3285,  0.2712, -0.4680,  0.6363,  0.6469,  0.4203],
        ...,
        [-0.4927, -0.1099, -0.0447,  0.2210, -0.1070,  0.9694],
        [-0.3560, -0.1556, -0.1483,  0.4630, -0.1901,  0.8657],
        [-0.4385,  0.3578,  0.0405,  0.2347,  0.4753,  0.8480]]), tensor([], size=(0, 6)), tensor([], size=(0, 6)), tensor([[ 0.0233, -0.3702, -0.1864,  0.0178, -0.9739,  0.2263],
        [ 0.0206, -0.5376, -0.3786,  0.0248,  0.0285,  0.9993],
        [ 0.2450, -0.0989, -0.4707, -0.3762, -0.7433,  0.5532],
        ...,
        [-0.2643, -0.3627, -0.2837,  0.8030, -0.4655,  0.3722],
        [ 0.1767,  0.0577, -0.4264, -0.2252, -0.8814,  0.4152],
        [ 0.2443, -0.0305, -0.4907, -0.3385, -0.7773,  0.5304]]), tensor([[ 0.5033, -0.3354,  0.0198, -0.5414, -0.7662, -0.3463],
        [ 0.5442, -0.3134, -0.0405, -0.4704, -0.7403, -0.4802],
        [ 0.5735, -0.2444,  0.0166, -0.5061, -0.7376, -0.4469],
        ...,
        [ 0.3280, -0.5588,  0.1055, -0.5887, -0.8003, -0.1138],
        [ 0.4520, -0.1773, -0.0078, -0.7317, -0.5066, -0.4561],
        [ 0.4988, -0.2075, -0.0243, -0.6354, -0.5863, -0.5026]]), tensor([[ 0.6258, -0.2856,  0.3211, -0.0714, -0.3564, -0.9316],
        [ 0.6433, -0.1554,  0.6092, -0.1239, -0.1626, -0.9789],
        [ 0.6365, -0.1761,  0.5456, -0.1150, -0.2239, -0.9678],
        ...,
        [ 0.5627, -0.5721, -0.2808, -0.0857, -0.4011, -0.9120],
        [ 0.5394, -0.3941, -0.3366, -0.1076, -0.2363, -0.9657],
        [ 0.5296, -0.4155, -0.2562, -0.1249, -0.2742, -0.9535]]), tensor([[ 0.3757, -0.2814,  0.2982,  0.3225,  0.1729, -0.9306],
        [ 0.2867, -0.3018,  0.5546,  0.3164,  0.2524, -0.9144],
        [ 0.4069, -0.2514,  0.1628,  0.3031,  0.1803, -0.9357],
        ...,
        [ 0.4827, -0.3049,  0.0351,  0.3422,  0.0913, -0.9352],
        [ 0.5816, -0.4474, -0.2769,  0.3319, -0.0518, -0.9419],
        [ 0.4287, -0.1722,  0.0735,  0.2907,  0.2511, -0.9233]]), tensor([[-0.4594,  0.0571, -0.6960,  0.7598, -0.6174,  0.2038],
        [-0.3698,  0.1164, -0.6086,  0.8573, -0.1492,  0.4927],
        [-0.0186,  0.0764, -0.4237,  0.8721, -0.1187,  0.4748],
        ...,
        [ 0.0977, -0.1155, -0.4079,  0.8505, -0.3379,  0.4030],
        [-0.1108, -0.2683, -0.4442,  0.6765, -0.6109,  0.4114],
        [ 0.1005, -0.4046, -0.5036,  0.7483, -0.6155,  0.2475]])], [tensor([[ 0.6171],
        [ 0.0277],
        [ 0.5073],
        ...,
        [-0.0096],
        [-0.0079],
        [-0.0312]]), tensor([[ 0.4436],
        [ 0.3050],
        [ 0.1998],
        ...,
        [-0.0923],
        [-0.0287],
        [-0.0109]]), tensor([[ 0.6392],
        [ 0.3042],
        [ 0.7190],
        ...,
        [-0.0187],
        [-0.0697],
        [-0.1006]]), tensor([], size=(0, 1)), tensor([], size=(0, 1)), tensor([], size=(0, 1)), tensor([[ 0.1375],
        [ 0.2887],
        [ 0.4622],
        ...,
        [-0.0633],
        [-0.0961],
        [-0.0244]]), tensor([[-0.2616],
        [-0.2121],
        [-0.1027],
        ...,
        [ 0.0149],
        [ 0.0898],
        [ 0.0127]]), tensor([[ 0.2523],
        [ 0.5367],
        [ 0.4363],
        ...,
        [-0.0135],
        [-0.0361],
        [-0.0480]]), tensor([], size=(0, 1)), tensor([], size=(0, 1)), tensor([[-0.4704],
        [-0.0955],
        [-0.0034],
        ...,
        [ 0.0261],
        [ 0.0447],
        [ 0.0539]]), tensor([[ 0.0566],
        [ 0.0583],
        [ 0.1184],
        ...,
        [-0.0858],
        [-0.0465],
        [-0.0185]]), tensor([[ 0.5678],
        [ 0.8120],
        [ 0.8584],
        ...,
        [-0.0900],
        [-0.0636],
        [-0.0299]]), tensor([[ 0.2476],
        [ 0.5512],
        [ 0.0146],
        ...,
        [-0.0313],
        [-0.0763],
        [-0.0489]]), tensor([[ 0.7975],
        [ 0.4874],
        [ 0.1119],
        ...,
        [-0.0820],
        [-0.0693],
        [-0.0706]])])
  0%|                                                                                                                                                       | 0/63 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 227, in <module>
    train(Args.output_dir, Args.expt_name, NeuralODF, Mask3D, optimizer, TrainDataLoader, ValDataLoader, loss_history, hyperparameters, Device, scheduler)
  File "train.py", line 54, in train
    coordinates, depths, surface_points = batch
ValueError: not enough values to unpack (expected 3, got 2)